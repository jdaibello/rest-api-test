name: Deploy Infrastructure

on:
  push:
    branches:
      - feature/*
      - current
      - develop
      - qa
      - uat
      - main

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Environment Variables
        id: set-vars

        run: |
          COMMIT_HASH_SHORT=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH_SHORT=${COMMIT_HASH_SHORT}" >> .env

          case "${GITHUB_REF#refs/heads/}" in
            feature/*)
              KUSTOMIZE_PATH=terraform/k8s/overlays/sandbox
              TAG=sandbox
              ;;
            current)
              KUSTOMIZE_PATH=terraform/k8s/overlays/sandbox
              TAG=sandbox
              ;;
            develop)
              KUSTOMIZE_PATH=terraform/k8s/overlays/dev
              TAG=dev
              ;;
            qa)
              KUSTOMIZE_PATH=terraform/k8s/overlays/qa
              TAG=qa
              ;;
            uat)
              KUSTOMIZE_PATH=terraform/k8s/overlays/uat
              TAG=uat
              ;;
            main)
              KUSTOMIZE_PATH=terraform/k8s/overlays/prod
              TAG=latest
              ;;
          esac

          echo "KUSTOMIZE_PATH=${KUSTOMIZE_PATH}" >> .env
          echo "DOCKER_IMAGE_TAG=${TAG}" >> .env

      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env

      - name: Log envs
        run: |
          source .env

          echo "COMMIT_HASH_SHORT=$COMMIT_HASH_SHORT"
          echo "KUSTOMIZE_PATH=$KUSTOMIZE_PATH"
          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG"

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: setup

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      PLATFORMS: linux/amd64,linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env-file
          path: .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PAT }}" | docker login docker.io -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and push Docker image

        env:
          COMMIT_HASH_SHORT: ${{ env.COMMIT_HASH_SHORT }}
          DOCKER_IMAGE_TAG: ${{ env.DOCKER_IMAGE_TAG }}

        run: |
          source .env

          echo "COMMIT_HASH_SHORT=${COMMIT_HASH_SHORT}"
          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}"

          docker buildx build --platform $PLATFORMS -f Dockerfile -t docker.io/$DOCKER_USERNAME/rest-api-test:${COMMIT_HASH_SHORT} -t docker.io/$DOCKER_USERNAME/rest-api-test:${DOCKER_IMAGE_TAG} --push .

  terraform:
    name: Deploy Terraform Infrastructure
    runs-on: ubuntu-latest
    needs: docker

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SANDBOX_TFVARS: ${{ secrets.SANDBOX_TFVARS }}
      DEV_TFVARS: ${{ secrets.DEV_TFVARS }}
      QA_TFVARS: ${{ secrets.QA_TFVARS }}
      UAT_TFVARS: ${{ secrets.UAT_TFVARS }}
      PROD_TFVARS: ${{ secrets.PROD_TFVARS }}
      TERRAFORM_DIR: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env-file
          path: .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Replace image tag in deployment YAML
        run: |
          source .env

          sed -i "s|docker.io/jpdev99/rest-api-test:sandbox|docker.io/jpdev99/rest-api-test:${COMMIT_HASH_SHORT}|g" terraform/k8s/base/deployment.yaml

      - name: Replace namespace in all k8s manifests
        run: |
          source .env

          for file in terraform/k8s/base/*.yaml; do
            sed -i "s|namespace: rest-api-test-sandbox-ns|namespace: rest-api-test-${DOCKER_IMAGE_TAG}-ns|g" "$file"
          done

      - name: Replace paths in Terraform cluster file
        run: |
          sed -i 's|\${path.cwd}/k8s|\${path.cwd}/../k8s|g' terraform/cluster/main.tf

      - name: Update Terraform paths in other files
        run: |
          find . -type f -name "*.tf" -exec sed -i 's|\${path.cwd}/k8s|\${path.cwd}/terraform/k8s|g' {} +

      - name: Terraform Init
        run: terraform -chdir=$TERRAFORM_DIR init -input=false -reconfigure

      - name: Terraform Validate
        run: terraform -chdir=$TERRAFORM_DIR validate

      - name: Set tfvars secrets
        id: set-tfvars

        run: |
          source .env

          # Use the appropriate secret based on the DOCKER_IMAGE_TAG
          case "${DOCKER_IMAGE_TAG}" in
            sandbox)
              ENV_TFVARS="${SANDBOX_TFVARS}"
              ;;
            dev)
              ENV_TFVARS="${DEV_TFVARS}"
              ;;
            qa)
              ENV_TFVARS="${QA_TFVARS}"
              ;;
            uat)
              ENV_TFVARS="${UAT_TFVARS}"
              ;;
            latest)
              ENV_TFVARS="${PROD_TFVARS}"
              ;;
          esac

          echo "ENV_TFVARS=${ENV_TFVARS}"
          echo ${ENV_TFVARS} >> .env.terraform

      - name: Upload .env.terraform file
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env.terraform

      - name: Log Terraform envs
        run: |
          source .env.terraform

          echo "ENV_TFVARS=$ENV_TFVARS"

      - name: Terraform Plan
        run: |
          source .env.terraform

          echo "ENV_TFVARS=${ENV_TFVARS}"

          terraform -chdir=$TERRAFORM_DIR plan -var-file=${ENV_TFVARS} -out=tfplan
